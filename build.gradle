plugins {
    id "java"
    id "java-library"
    id "maven-publish"
    id "eclipse"
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.8"
    id "com.gradleup.shadow" version "8.3.6"
}

subprojects {
    apply plugin: "java-library"
    apply plugin: "maven-publish"
    apply plugin: "com.gradleup.shadow"

    group = "dev.airyy"

    repositories {
        mavenCentral()
        maven {
            name "AiryMC Releases"
            url "https://maven.airymc.net/releases"
        }
        maven {
            url = "https://repo.panda-lang.org/releases"
        }
    }

    dependencies {
        api "org.jetbrains:annotations:26.0.2"
        api "net.kyori:adventure-api:4.20.0"
        api "net.kyori:adventure-text-minimessage:4.20.0"
    }

    def targetJavaVersion = 21
    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"

        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            options.release.set(targetJavaVersion)
        }
    }

    tasks.named("shadowJar") {
        archiveClassifier.set("")
        mergeServiceFiles()
    }

    tasks.named("jar") {
        archiveClassifier.set("original")
    }

    tasks.register("sourcesJar", Jar) {
        from sourceSets.main.allSource
        archiveClassifier.set("sources")
    }

    tasks.register("javadocJar", Jar) {
        dependsOn javadoc
        from javadoc.destinationDir
        archiveClassifier.set("javadoc")
    }


    publishing {
        repositories {
            maven {
                url = uri("https://maven.airymc.net/releases")

                credentials {
                    username = findProperty("reposiliteUsername") ?: ""
                    password = findProperty("reposilitePassword") ?: ""
                }
            }
        }

        publications {
            mavenJava(MavenPublication) {
                artifactId = "airylib-${project.name}"

                // Publish only the shadowJar
                artifact(tasks.named("shadowJar")) {
                    builtBy(tasks.named("shadowJar"))
                }

                // Publish the source JAR
                artifact(sourcesJar) {
                    builtBy(sourcesJar)
                }

                // Publish the Javadoc JAR
                artifact(javadocJar) {
                    builtBy(javadocJar)
                }
            }
        }
    }
}